##Reduce Modulus

from Crypto.Util.number import *
import gmpy2

p = 97376413457495379727538733988115472170316568275353708109214217512313027597677
q = 103063943630687425230399745410466615279125356292442540958979279268474247260079

N = p * q
phiN = (p-1) * (q-1)

c = 493411990714034701192036868925033382533813449023272468886834417275865894890277610897602010608126211732489729110637453412478527735277532858305194132432995412335314758844973458067236971260497417393244304994147175160121126866274637094642084286422204250530071767179407437175780827344723433812174890560874797281085881372866235919836442489439131953350250339903321616150128653702980111364606793773693115742802148096105255600570826866081538329662788508308910574300106675
e = 65537

d = gmpy2.invert(e,phiN)
print(long_to_bytes(pow(c,d,N)))
